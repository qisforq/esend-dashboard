-- NOTE: This schema was exported from the dbschema app. Only use this schema if schema.sql isn't working

-- CREATE SCHEMA "public";

CREATE SEQUENCE "public".recipients_id_seq START WITH 1;

CREATE SEQUENCE "public".ripple_quote_element_fx_rate_id_seq START WITH 1;

CREATE SEQUENCE "public".senders_id_seq START WITH 1;

CREATE SEQUENCE "public".transactions_id_seq START WITH 1;

CREATE SEQUENCE "public".users_id_seq START WITH 1;

CREATE  TABLE "public".esend_fee_and_fx_rate ( 
	mt_fee               numeric(7,4) DEFAULT 0.00 NOT NULL ,
	mt_markup            numeric(7,4)   
 );

CREATE  TABLE "public".users ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	first_name           text   ,
	last_name            text   ,
	google_profile_id    text  NOT NULL ,
	joined               timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL ,
	CONSTRAINT users_pkey PRIMARY KEY ( id ),
	CONSTRAINT google_profile_id_is_unique UNIQUE ( google_profile_id ) 
 );

CREATE  TABLE "public".recipients ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	first_name           text  NOT NULL ,
	last_name            text  NOT NULL ,
	clabe_number         text   ,
	fk_user_id           integer   ,
	CONSTRAINT recipients_pkey PRIMARY KEY ( id ),
	CONSTRAINT recipients_fk_user_id_fkey FOREIGN KEY ( fk_user_id ) REFERENCES "public".users( id )  
 );

CREATE  TABLE "public".senders ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	first_name           text  NOT NULL ,
	last_name            text  NOT NULL ,
	fk_user_id           integer   ,
	CONSTRAINT senders_pkey PRIMARY KEY ( id ),
	CONSTRAINT senders_fk_user_id_fkey FOREIGN KEY ( fk_user_id ) REFERENCES "public".users( id )  
 );

CREATE  TABLE "public".transactions ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	fk_sender_id         integer  NOT NULL ,
	fk_recipient_id      integer  NOT NULL ,
	"timestamp"          timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL ,
	esend_mt_fee         numeric(7,4) DEFAULT 0.00 NOT NULL ,
	esend_mt_fx_rate_usdmxn numeric(7,4) DEFAULT 0.00 NOT NULL ,
	total_usd            numeric(8,4)   ,
	CONSTRAINT transactions_pkey PRIMARY KEY ( id ),
	CONSTRAINT link_recipient_info FOREIGN KEY ( fk_recipient_id ) REFERENCES "public".recipients( id )  ,
	CONSTRAINT link_sender_info FOREIGN KEY ( fk_sender_id ) REFERENCES "public".senders( id )  
 );

CREATE  TABLE "public".ripple_payments ( 
	payment_id           text  NOT NULL ,
	contract_hash        text   ,
	payment_state        text  NOT NULL ,
	modified_at          text   ,
	fk_transaction_id    integer  NOT NULL ,
	CONSTRAINT ripple_payments_pkey PRIMARY KEY ( payment_id ),
	CONSTRAINT fk_transaction_id_is_unique UNIQUE ( fk_transaction_id ) ,
	CONSTRAINT fk_transaction_id FOREIGN KEY ( fk_transaction_id ) REFERENCES "public".transactions( id )  
 );

CREATE  TABLE "public".ripple_quotes ( 
	quote_id             text  NOT NULL ,
	created_at           text   ,
	"type"               text   ,
	amount               numeric(10,4)   ,
	currency_code        text   ,
	fk_payment_id        text  NOT NULL ,
	CONSTRAINT ripple_quotes_pkey PRIMARY KEY ( quote_id ),
	CONSTRAINT fk_payment_id_is_unique UNIQUE ( fk_payment_id ) ,
	CONSTRAINT fk_payment_id FOREIGN KEY ( fk_payment_id ) REFERENCES "public".ripple_payments( payment_id )  
 );

CREATE  TABLE "public".ripple_quote_elements ( 
	quote_element_id     text  NOT NULL ,
	fk_quote_id          text  NOT NULL ,
	quote_element_type   text   ,
	quote_element_order  text   ,
	sender_address       text   ,
	receiver_address     text   ,
	sending_amount       numeric   ,
	receiving_amount     numeric   ,
	sending_fee          numeric   ,
	receiving_fee        numeric   ,
	sending_currency_code text   ,
	receiving_currency_code text   ,
	transfer_currency_code numeric   ,
	CONSTRAINT ripple_quote_elements_pkey PRIMARY KEY ( quote_element_id ),
	CONSTRAINT ripple_quote_elements_fk_quote_id_fkey FOREIGN KEY ( fk_quote_id ) REFERENCES "public".ripple_quotes( quote_id )  
 );

CREATE  TABLE "public".ripple_quote_element_fx_rate ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	rate                 numeric   ,
	base_currency_code   text   ,
	counter_currency_code text   ,
	"type"               text   ,
	fk_quote_element_id  text   ,
	CONSTRAINT ripple_quote_element_fx_rate_pkey PRIMARY KEY ( id ),
	CONSTRAINT fk_quote_element_id_is_unique UNIQUE ( fk_quote_element_id ) ,
	CONSTRAINT fk_quote_element_id_fkey FOREIGN KEY ( fk_quote_element_id ) REFERENCES "public".ripple_quote_elements( quote_element_id )  
 );

